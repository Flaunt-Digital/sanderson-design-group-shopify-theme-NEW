{% comment %}
    Legacy swatch from the original Clarke & Clarke theme.
{% endcomment %}

{% assign option_name = option.name | downcase %}

{% for value in option.values %}
  {% assign image_url = value | handle | append: '.png' | file_url %}

  {%- comment -%}loop through metafields to see if there is a overwrite value for hex colour{%- endcomment -%}
  {% for colour in product.metafields.colour_swatch.colour %}

    {% assign optionValue = value | strip | downcase %}
    {% assign metaValue = colour | strip | downcase %}
    {% assign hexOne = product.metafields.colour.hex_1 | downcase | prepend: '#' %}
    {% assign hexTwo = product.metafields.colour.hex_2 | downcase | prepend: '#' %}
    {% assign hexType = product.metafields.colour.hex_type | downcase %}

    {% if metaValue == optionValue %}
      {% if hexOne != '#' and hexTwo == '#' %}

        {% capture swatchCSS %}
          background-color: {{ hexOne }};
          {% unless color_swatch_style == 'default-color' %}
            background-image: url({% if color_swatch_style == 'custom-image' %}{{ image_url }}{% elsif color_swatch_style == 'variant-image' %}{{ variant_image_url }}{% endif %}); background-position: center center;
          {% endunless %}
        {% endcapture %}
      {% elsif hexOne != '#' and hexTwo != '#' %}
        {% if hexType == 'half' %}
          {% capture swatchCSS %}
          background-color: {{ hexOne }}; background-image: -webkit-linear-gradient(-45deg, {{ hexOne }} 0%, {{ hexOne }} 50%, {{ hexTwo }} 50%, {{ hexTwo }} 50%);
          background-image: linear-gradient(-webkit-linear-gradient(-45deg, {{ hexOne }} 0%, {{ hexOne }} 50%, {{ hexTwo }} 50%, {{ hexTwo }} 50%);
            {% unless color_swatch_style == 'default-color' %}
              background-image: url({% if color_swatch_style == 'custom-image' %}{{ image_url }}{% elsif color_swatch_style == 'variant-image' %}{{ variant_image_url }}{% endif %}); background-position: center center;
            {% endunless %}
          {% endcapture %}
        {% elsif hexType == 'outer' %}
        {% capture swatchCSS %}
          background-color: {{ hexOne }}; border: 4px solid {{ hexTwo }}!important;
            {% unless color_swatch_style == 'default-color' %}
              background-image: url({% if color_swatch_style == 'custom-image' %}{{ image_url }}{% elsif color_swatch_style == 'variant-image' %}{{ variant_image_url }}{% endif %}); background-position: center center;
            {% endunless %}
          {% endcapture %}
        {% endif %}
      {% endif %}
    {% endif %}
  {% endfor %}

  {% capture id %}{{ section.id }}-swatch-{{ option.position }}-{{ value | handle }}{% endcapture %}

  {% capture regular_swatch %}
    <div class="swatches__swatch--color swatch-element color swatches__shape--{{ section.settings.color_swatch_shape }}" style="display: inline-block; margin-right: 1em;">
      <input type="radio" id="{{ id }}" class="swatches__form--input" name="{{ option_name }}" value="{{ value | escape }}" data-position="{{ option.position }}" checked />

      <a href="{{ rangeProduct.url }}" style="color: inherit; text-decoration: none;font-weight: 500;">
        <div class="swatches__form--label"
          style="{{ swatchCSS }}; width: 1em; height: 1em; display: inline-block; border-radius: 100%; border: 1px solid #000;">
        </div>
        <span class="swatch-tooltip">{{ value | escape }}</span>
      </a>
    </div>
  {% endcapture %}

  {{ regular_swatch }}
{% endfor %}